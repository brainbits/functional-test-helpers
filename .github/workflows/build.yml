# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Build"

on:
  pull_request:
  push:
    branches:
      - "master"

jobs:
  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        dependencies: ["lowest", "highest"]
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: mbstring

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install development tools in highest version in a separate directory"
        run: "mkdir /tmp/devtools && cp composer.json /tmp/devtools/ && cd /tmp/devtools/ && composer config name brainbits/devtools && composer update --prefer-dist --no-interaction --no-progress"

      - name: "Install lowest version of thecodingmachine/safe in development tools for phpstan compatibility"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "cd /tmp/devtools/ && composer require 'thecodingmachine/safe' '^1.3'"

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-dev --prefer-dist --no-interaction --no-progress"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-dev --prefer-dist --no-interaction --no-progress"

      - name: "Code Style"
        run: "/tmp/devtools/vendor/bin/phpcs"

      - name: "Static Analysis"
        run: "/tmp/devtools/vendor/bin/phpstan analyze"

      - name: "Tests"
        run: "/tmp/devtools/vendor/bin/phpunit"
